//
// Protocol buffers definition for Silo server
//
syntax = "proto3";
package pt.tecnico.sauron.silo.grpc;

import "google/protobuf/timestamp.proto";

//cam_join - regista uma camera, recebe nome e coordenadas

message ObservationGrpc {
	string type = 1;
	string id = 2;
	google.protobuf.Timestamp time = 3;
}

message Coordinates {
    double lat = 1;
    double lon = 2;
}

message CamJoinRequest {
	string name = 1;
	Coordinates coordinates = 2;
}

message CamJoinResponse {
}

//cam_info - recebe nome, devolve coordenadas

message CamInfoRequest {
	string name = 1;
}

message CamInfoResponse {
	Coordinates coordinates = 1;
}

//report - recebe o nome da camera, um conjunto de observacoes, e os dados correspondentes

message ReportRequest {
	string name = 1;
	repeated ObservationGrpc observation = 2;
}

message ReportResponse {
}


//track - recebe o tipo e o id do objeto procurado, devolve a observação mais recente do objeto;	

message TrackRequest {
	string type = 1;
	string id = 2;
}

message TrackResponse {
	ObservationGrpc observation = 1;
}

//trackMatch - same as "track" mas apenas parte do seu id (devolve mais do que um objeto)

message TrackMatchRequest {
	string type = 1;
	string id = 2;
}

message TrackMatchResponse {
	repeated ObservationGrpc observation = 1;
}

//trace - recebe o tipo e o id do objeto, devolve uma lista ordenada de observações do objeto

message TraceRequest {
	string type = 1;
	string id = 2;
}

message TraceResponse {
	repeated ObservationGrpc observation = 1;
}


message PingRequest {
	string text = 1;
}

message PingResponse {
	string text = 1;
}

message ClearRequest {
}

message ClearResponse {
}

message InitRequest {
}

message InitResponse {
}

// service

service SiloService {
  rpc camJoin(CamJoinRequest) returns (CamJoinResponse);
  rpc camInfo(CamInfoRequest) returns (CamInfoResponse);
  rpc report(ReportRequest) returns (ReportResponse);
  rpc track(TrackRequest) returns (TrackResponse);
  rpc trackMatch(TrackMatchRequest) returns (TrackMatchResponse);
  rpc trace(TraceRequest) returns (TraceResponse);
  
  rpc ping(PingRequest) returns (PingResponse);
  rpc clear(ClearRequest) returns (ClearResponse);
  rpc init(InitRequest) returns (InitResponse);
}

